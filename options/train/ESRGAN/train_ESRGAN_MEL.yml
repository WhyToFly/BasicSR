# general settings
name: 052_ESRGAN_x4_f64b23_DIV2K_400k_B16G1_051pretrain_wandb
model_type: ESRGANModel
scale: 4
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 0

# dataset and data loader settings
datasets:
  train:
    name: Train_Data
    type: PairedMelDataset
    #dataroot_lq: datasets/multispeaker/train/mel/11025Hz
    #dataroot_gt: datasets/multispeaker/train/mel/44100Hz
    dataroot_lq: D:/proj_files/datasets/multispeaker_nolog/train/mel/11025Hz
    dataroot_gt: D:/proj_files/datasets/multispeaker_nolog/train/mel/44100Hz
    filename_tmpl: '{}'
    io_backend:
      type: disk
      # (for lmdb)
      # type: lmdb

    gt_size: 512 # mels have "height" 512
    use_flip: true
    use_rot: true

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 1
    batch_size_per_gpu: 1
    dataset_enlarge_ratio: 100
    prefetch_mode: ~

  val:
    name: Test_Data
    type: PairedMelDataset
    #dataroot_lq: datasets/multispeaker/val/mel/11025Hz
    #dataroot_gt: datasets/multispeaker/val/mel/44100Hz
    dataroot_lq: D:/proj_files/datasets/multispeaker_nolog/val/mel/11025Hz
    dataroot_gt: D:/proj_files/datasets/multispeaker_nolog/val/mel/44100Hz
    io_backend:
      type: disk

# network structures
network_g:
  type: RRDBNet
  num_in_ch: 1 # we only want one in- and output channel
  num_out_ch: 1
  num_feat: 64
  num_block: 16

network_d:
  type: VGGStyleDiscriminator128
  num_in_ch: 1
  num_feat: 64

# path
path:
  #pretrain_network_g: experiments/051_RRDBNet_PSNR_x4_f64b23_DIV2K_1000k_B16G1_wandb/models/net_g_1000000.pth
  strict_load_g: true
  resume_state: experiments/052_ESRGAN_x4_f64b23_DIV2K_400k_B16G1_051pretrain_wandb/training_states/160000.state

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 1e-5 # decreased lr to fit decreased batch size
    weight_decay: 0
    betas: [0.9, 0.99]
  optim_d:
    type: Adam
    lr: !!float 1e-5 # decreased lr to fit decreased batch size
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [50000, 100000, 200000, 300000]
    gamma: 0.5

  total_iter: 400000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: !!float 1e-2
    reduction: mean
  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      'conv5_4': 1  # before relu
    vgg_type: vgg19
    use_input_norm: true
    range_norm: false
    perceptual_weight: 1.0
    style_weight: 0
    criterion: l1
  gan_opt:
    type: GANLoss
    gan_type: vanilla
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: !!float 5e-3

  net_d_iters: 1
  net_d_init_iters: 0

# validation settings
val:
  val_freq: !!float 2e3
  #val_freq: !!float 100
  save_img: true

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 2e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
